name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      BACKEND_IMAGE: shahriar001/subscription-tracker-backend
      BACKEND_VERSION: 1.9
      FRONTEND_IMAGE: shahriar001/subscription-tracker-frontend
      FRONTEND_VERSION: 1.0.8

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo "${{ secrets.DOCKER_ENV_FILE }}" > .env

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Ensure external Docker network and volumes exist
        run: |
          docker network inspect app-network >/dev/null 2>&1 || docker network create app-network
          docker volume inspect db_data >/dev/null 2>&1 || docker volume create db_data
          docker volume inspect redis_data >/dev/null 2>&1 || docker volume create redis_data

      # Step 1: Build and start backend stack only
      - name: Build and start backend stack
        env:
          DOCKER_BUILDKIT: 1
        run: |
          docker compose -f Backend/SubscriptionTracker/docker-compose-backend.dev.yml --env-file .env up --build -d

      # Step 2: Wait for backend health endpoint
      - name: Wait for backend health endpoint
        run: |
          for i in {1..60}; do
            echo "Checking backend health: Attempt $i"
            if curl -sSf http://localhost/api/up >/dev/null; then
              echo "Backend healthy!"
              exit 0
            fi
            echo "Not healthy yet. Sleeping 5s."
            docker logs subs-tracker-nginx
            docker logs subs-tracker-backend
            sleep 5
          done
          echo "Backend failed to become healthy after 60 tries."
          exit 1

      # Step 3: Build all images with Docker Compose + BuildKit (frontend will build, backend is cached)
      - name: Build all images with Docker Compose + BuildKit
        env:
          DOCKER_BUILDKIT: 1
        run: |
          docker compose --env-file .env build

      - name: Tag backend and frontend images
        run: |
          docker tag subs-tracker-backend $BACKEND_IMAGE:$BACKEND_VERSION
          docker tag subs-tracker-backend $BACKEND_IMAGE:latest
          docker tag subs-tracker-frontend $FRONTEND_IMAGE:$FRONTEND_VERSION
          docker tag subs-tracker-frontend $FRONTEND_IMAGE:latest

      - name: Push backend and frontend images
        run: |
          docker push $BACKEND_IMAGE:$BACKEND_VERSION
          docker push $BACKEND_IMAGE:latest
          docker push $FRONTEND_IMAGE:$FRONTEND_VERSION
          docker push $FRONTEND_IMAGE:latest

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY_OCI }}

      - name: Add VPS to known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.SSH_HOST_OCI }} >> ~/.ssh/known_hosts

      - name: Deploy to VPS
        env:
          SSH_USER: ${{ secrets.SSH_USER_OCI }}
          SSH_HOST: ${{ secrets.SSH_HOST_OCI }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          ssh $SSH_USER@$SSH_HOST '
            cd subscription-tracker/ && \
            rm -f docker-compose.production.yml && \
            curl -O https://raw.githubusercontent.com/Shahriar-Mahmud-Toha/SubscriptionTracker/master/docker-compose.production.yml && \
            docker compose -f docker-compose.production.yml pull && \
            docker compose -f docker-compose.production.yml up -d
          '